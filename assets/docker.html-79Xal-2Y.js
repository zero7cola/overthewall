import{_ as a,r as o,o as c,c as l,a as e,b as t,d as i,e as n}from"./app-DiQl15id.js";const d={},r=n(`<h1 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>docker</span></a></h1><h2 id="安装docker" tabindex="-1"><a class="header-anchor" href="#安装docker"><span>安装docker</span></a></h2><ol><li>卸载旧版本</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> yum remove <span class="token function">docker</span> <span class="token punctuation">\\</span>
            docker-client <span class="token punctuation">\\</span>
            docker-client-latest <span class="token punctuation">\\</span>
            docker-common <span class="token punctuation">\\</span>
            docker-latest <span class="token punctuation">\\</span>
            docker-latest-logrotate <span class="token punctuation">\\</span>
            docker-logrotate <span class="token punctuation">\\</span>
            docker-engine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>安装依赖</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils <span class="token punctuation">\\</span>
         device-mapper-persistent-data <span class="token punctuation">\\</span>
         lvm2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>设置稳定的仓库</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> yum-config-manager <span class="token punctuation">\\</span>
      --add-repo <span class="token punctuation">\\</span>
      https://download.docker.com/linux/centos/docker-ce.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>安装最新版docker</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce docker-ce-cli containerd.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="设置阿里云镜像" tabindex="-1"><a class="header-anchor" href="#设置阿里云镜像"><span>设置阿里云镜像</span></a></h2>`,11),p={href:"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors",target:"_blank",rel:"noopener noreferrer"},u=n(`<h2 id="安装docker-compose" tabindex="-1"><a class="header-anchor" href="#安装docker-compose"><span>安装docker-compose</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># $ sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span>

//如果速度太慢可以换成下面的地址执行
<span class="token comment">#$ curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.5/docker-compose-\`uname -s\`-\`uname -m\` &gt; /usr/local/bin/docker-compose</span>


$ <span class="token function">curl</span> <span class="token parameter variable">-SL</span> https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-linux-x86_64 <span class="token parameter variable">-o</span> /usr/local/bin/docker-compose

$ <span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-compose

$ <span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/bin/docker-compose /usr/bin/docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置开机服务" tabindex="-1"><a class="header-anchor" href="#设置开机服务"><span>设置开机服务</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> docker.service 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4);function m(k,v){const s=o("ExternalLinkIcon");return c(),l("div",null,[r,e("p",null,[e("a",p,[t("https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors"),i(s)])]),u])}const b=a(d,[["render",m],["__file","docker.html.vue"]]),g=JSON.parse('{"path":"/posts/docker.html","title":"docker","lang":"zh-CN","frontmatter":{"date":"2024-05-10T00:00:00.000Z","category":["技术"],"tag":["docker"]},"headers":[{"level":2,"title":"安装docker","slug":"安装docker","link":"#安装docker","children":[]},{"level":2,"title":"设置阿里云镜像","slug":"设置阿里云镜像","link":"#设置阿里云镜像","children":[]},{"level":2,"title":"安装docker-compose","slug":"安装docker-compose","link":"#安装docker-compose","children":[]},{"level":2,"title":"设置开机服务","slug":"设置开机服务","link":"#设置开机服务","children":[]}],"git":{"updatedTime":1715408092000},"filePathRelative":"posts/docker.md","excerpt":"\\n<h2>安装docker</h2>\\n<ol>\\n<li>卸载旧版本</li>\\n</ol>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>$ <span class=\\"token function\\">sudo</span> yum remove <span class=\\"token function\\">docker</span> <span class=\\"token punctuation\\">\\\\</span>\\n            docker-client <span class=\\"token punctuation\\">\\\\</span>\\n            docker-client-latest <span class=\\"token punctuation\\">\\\\</span>\\n            docker-common <span class=\\"token punctuation\\">\\\\</span>\\n            docker-latest <span class=\\"token punctuation\\">\\\\</span>\\n            docker-latest-logrotate <span class=\\"token punctuation\\">\\\\</span>\\n            docker-logrotate <span class=\\"token punctuation\\">\\\\</span>\\n            docker-engine\\n</code></pre></div>"}');export{b as comp,g as data};
